# --- General Settings ---
setopt autocd             # Change directories without typing 'cd'
setopt extendedglob       # Enable advanced globbing
setopt histignoredups     # Ignore duplicate commands in history
setopt histfindnodups     # Ignore duplicates during search
setopt sharehistory       # Share command history across all sessions
setopt autocontinue       # Continue long commands over multiple lines

# Add Homebrew binaries to PATH
export PATH="/opt/homebrew/bin"
export PATH="$PATH:opt/homebrew/anaconda3/bin"

# Add pyenv and pyenv-virtualenv to PATH
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PATH:$PYENV_ROOT/bin"
#eval "$(pyenv init --path)"
#eval "$(pyenv virtualenv-init -)"

# Add user-specific bin directory to PATH
export PATH="$PATH:$HOME/bin"

# Add standard system paths
export PATH="$PATH:/usr/local/bin"
export PATH="$PATH:/usr/bin"
export PATH="$PATH:/bin"
export PATH="$PATH:/usr/sbin"
export PATH="$PATH:/sbin"

# Add specific virtualenv paths
export PATH="$PATH:$PYENV_ROOT/versions/env-shellgpt/bin"


export EDITOR="nvim"       # Set default editor to Neovim
export PAGER="less"        # Use 'less' for paging
export GLOW_CONFIG_DIR="$HOME/.config/glow"

# --- History Settings ---
HISTFILE=~/.zsh_history      # History file location
HISTSIZE=5000                # Number of history entrieszshrc
SAVEHIST=5000                # Saved entries

# --- Aliases ---
alias ls="ls -G"                  # Colorized 'ls'
alias ll="ls -lG"                 # Long listing
alias la="ls -laG"                # Show hidden files
alias n="nvim"                    # Short alias for Neovim
alias update="brew update && brew upgrade && brew cleanup"  # Update system

alias lg="lazygit"

alias ccd="chezmoi cd"
alias capply="chezmoi apply"
alias cstatus="chezmoi status"

# --- Functions ---
f() {
  open .  # Open Finder from current terminal directory
}

mkcd() {
  mkdir -p "$1" && cd "$1"  # Quickly create and navigate to a new directory
}

# --- Plugins / Features ---
# Syntax highlighting (install with Homebrew: `brew install zsh-syntax-highlighting`)
if [[ -f /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]]; then
  source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
fi

# Autocomplete (install with Homebrew: `brew install zsh-autosuggestions`)
if [[ -f /usr/local/share/zsh-autosuggestions/zsh-autosuggestions.zsh ]]; then
  source /usr/local/share/zsh-autosuggestions/zsh-autosuggestions.zsh
fi

# --- MacOS Specific ---
defaults write com.apple.desktopservices DSDontWriteNetworkStores true
alias show_hidden="defaults write com.apple.Finder AppleShowAllFiles true; killall Finder"
alias hide_hidden="defaults write com.apple.Finder AppleShowAllFiles false; killall Finder"

# --- Completion ---
autoload -Uz compinit
compinit

# --- Key Bindings ---
bindkey -e
bindkey "^[[H" beginning-of-line    # Home key
bindkey "^[[F" end-of-line          # End key
bindkey "^[[3~" delete-char         # Delete key

# --- Performance ---
if [ -n "$TMUX" ]; then
  export TERM="screen-256color"
else
  export TERM="xterm-256color"
fi

# shell_gpt config
export CHAT_CACHE_PATH="$HOME/Library/Caches/chat_cache"
export CACHE_PATH="$HOME/Library/Caches/cache"
export CHAT_CACHE_LENGTH="100"
export CACHE_LENGTH="100"
export REQUEST_TIMEOUT="60"
export DEFAULT_MODEL="gpt-4o"
export DEFAULT_COLOR="magenta"
export ROLE_STORAGE_PATH="$HOME/.config/shell_gpt/roles"
export DEFAULT_EXECUTE_SHELL_CMD="false"
export DISABLE_STREAMING="false"
export CODE_THEME="one-dark"
export OPENAI_FUNCTIONS_PATH="$HOME/.config/shell_gpt/functions"
export OPENAI_USE_FUNCTIONS="true"
export SHOW_FUNCTIONS_OUTPUT="false"
export API_BASE_URL="default"
export PRETTIFY_MARKDOWN="true"
export USE_LITELLM="false"
export SHELL_INTERACTION="true"
export OS_NAME="auto"
export SHELL_NAME="auto"


# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/opt/homebrew/anaconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/opt/homebrew/anaconda3/etc/profile.d/conda.sh" ]; then
        . "/opt/homebrew/anaconda3/etc/profile.d/conda.sh"
    else
        export PATH="/opt/homebrew/anaconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

conda activate python-cmu

# --- Starship Prompt ---
# Ensure Starship is installed via Homebrew: `brew install starship`
# Configure Starship with a custom configuration file if needed.
if command -v starship &> /dev/null; then
  eval "$(starship init zsh)"
fi
